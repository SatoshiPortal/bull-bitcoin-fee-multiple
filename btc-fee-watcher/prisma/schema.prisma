// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model FeeEstimates {
  id                        Int                         @id @default(autoincrement())
  time                      DateTime                    @unique
  satsPerByte               Decimal
  FeeIndexes                FeeIndexes?
  createdAt                 DateTime                    @default(now())
  MovingAverageFeeEstimates MovingAverageFeeEstimates[]
}

model MovingAverages {
  id           Int                         @id @default(autoincrement())
  day          DateTime                    @unique
  last365Days  Decimal
  last30Days   Decimal
  feeIndex     FeeIndexes[]
  feeEstimates MovingAverageFeeEstimates[]
  createdAt    DateTime                    @default(now())
}

model MovingAverageFeeEstimates {
  feeEstimateId   Int
  movingAverageId Int
  feeEstimate     FeeEstimates   @relation(fields: [feeEstimateId], references: [id])
  movingAverage   MovingAverages @relation(fields: [movingAverageId], references: [id])

  @@id([feeEstimateId, movingAverageId])
}

model FeeIndexes {
  id               Int            @id @default(autoincrement())
  time             DateTime       @unique
  feeEstimateId    Int            @unique
  feeEstimate      FeeEstimates   @relation(fields: [feeEstimateId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  movingAverageId  Int
  movingAverage    MovingAverages @relation(fields: [movingAverageId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ratioLast365Days Decimal
  ratioLast30Days  Decimal
  createdAt        DateTime       @default(now())
}

model FeeEstimatesArchive {
  id             Int      @id @default(autoincrement())
  startTime      DateTime // Start of the averaging period
  endTime        DateTime // End of the averaging period
  avgSatsPerByte Decimal // Average of satsPerByte over the period
  createdAt      DateTime @default(now())
}

model FeeIndexesArchive {
  id                  Int      @id @default(autoincrement())
  startTime           DateTime // Start of the averaging period
  endTime             DateTime // End of the averaging period
  avgRatioLast365Days Decimal // Average ratioLast365Days over the period
  avgRatioLast30Days  Decimal // Average ratioLast30Days over the period
  createdAt           DateTime @default(now())
}
